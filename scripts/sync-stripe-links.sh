#!/usr/bin/env bash
# Sync Stripe payment link environment variables from Google Secret Manager
# Usage: ./scripts/sync-stripe-links.sh [secret-name] [output-env-file]
#   secret-name      (optional) defaults to "Stripe"
#   output-env-file  (optional) defaults to ".env.local"

set -euo pipefail

SECRET_NAME="${1:-Stripe}"
OUTPUT_FILE="${2:-.env.local}"

if ! command -v gcloud >/dev/null 2>&1; then
  echo "Error: gcloud CLI is required but not installed." >&2
  exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
  echo "Error: jq is required but not installed." >&2
  exit 1
fi

TEMP_FILE="${OUTPUT_FILE}.tmp"

echo "# Generated by sync-stripe-links.sh on $(date -u)" >"${TEMP_FILE}"

echo "Fetching secret '${SECRET_NAME}' from Google Secret Manager..."
SECRET_JSON=$(gcloud secrets versions access latest --secret="${SECRET_NAME}")

echo "Writing Stripe payment link environment variables to ${OUTPUT_FILE}" >&2

echo "${SECRET_JSON}" | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while IFS='=' read -r key value; do
  if [[ -z "${key}" || -z "${value}" ]]; then
    continue
  fi

  SANITIZED_KEY=$(echo "${key}" | tr '[:lower:]' '[:upper:]' | tr -c 'A-Z0-9' '_')

  if [[ "${SANITIZED_KEY}" == "DEFAULT" ]]; then
    ENV_KEY="NEXT_PUBLIC_STRIPE_DEFAULT_LINK"
  else
    ENV_KEY="NEXT_PUBLIC_STRIPE_LINK_${SANITIZED_KEY}"
  fi

  printf '%s=%s\n' "${ENV_KEY}" "${value}" >>"${TEMP_FILE}"
done

mv "${TEMP_FILE}" "${OUTPUT_FILE}"

echo "Done. Review ${OUTPUT_FILE} and redeploy to apply the new Stripe links." >&2
